<?php

namespace AppBundle\Repository;

/**
 * DeviceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeviceRepository extends \Doctrine\ORM\EntityRepository
{
        public function findLikeSearch($search, $type, $customer)
        {
             $qb = $this->getEntityManager()->createQueryBuilder();
             if($type)
             {
                $qb->select('u')
                    ->from('AppBundle:Device', 'u')
                    ->innerJoin('u.owner', 'c')
                    ->addSelect('c')
                    ->leftJoin('c.customer', 'd')   
                    ->where($qb->expr()->andX(
                           $qb->expr()->eq('d.id', ':customer'),
                           $qb->expr()->like('u.'.$type, ':search')
                     ))      
                    ->setParameter('search','%'.$search.'%')
                    ->setParameter('customer', $customer);
             }
             else
             {
                 $qb->select('u')
                    ->from('AppBundle:Device', 'u')
                    ->innerJoin('u.owner', 'c')
                    ->innerJoin('c.customer', 'd')   
                    ->where($qb->expr()->andX(
                           $qb->expr()->eq('d.id', ':customer'),
                           $qb->expr()->like('u.hostname',':search')
                     ))      
                    ->setParameter('search','%'.$search.'%')
                    ->setParameter('customer', $customer);
             }
             return $qb->getQuery()->getResult();   
        }
        public function findAllInContext($customer)
        {
             $qb = $this->getEntityManager()->createQueryBuilder();
             $qb->select('u')
                    ->from('AppBundle:Device', 'u')
                    ->innerJoin('u.owner', 'c')
                    ->innerJoin('c.customer', 'd')   
                    ->where($qb->expr()->eq('d.id', ':customer'))      
                    ->setParameter('customer', $customer);
             return $qb->getQuery()->getResult();   
        }
}
